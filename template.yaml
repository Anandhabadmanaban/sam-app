AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template with API Gateway (API Key required), Lambda, and DynamoDB

Resources:
  ### DynamoDB Table ###
  VPCRecordsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VPCRecords
      AttributeDefinitions:
        - AttributeName: vpc_id
          AttributeType: S
      KeySchema:
        - AttributeName: vpc_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ### API Gateway ###
  VpcApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,Authorization,x-api-key'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true   # ðŸ‘ˆ require API key

  ### Lambda Function ###
  VpcCreatorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VpcCreatorLambda
      Handler: app.lambda_handler
      Runtime: python3.9
      CodeUri: .
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref VPCRecordsTable
        - Statement:
            Effect: Allow
            Action:
              - ec2:CreateVpc
              - ec2:ModifyVpcAttribute
              - ec2:CreateSubnet
              - ec2:DescribeVpcs
              - ec2:DescribeSubnets
            Resource: "*"
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref VPCRecordsTable
      Events:
        VpcPostEvent:
          Type: Api
          Properties:
            RestApiId: !Ref VpcApi
            Path: /vpc
            Method: post
        VpcGetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref VpcApi
            Path: /vpc
            Method: get

  ### API Key ###
  MyApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: MyClientApiKey
      Enabled: true
      

  ### Usage Plan ###
  MyUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: VpcApiUsagePlan
      ApiStages:
        - ApiId: !Ref VpcApi
          Stage: prod
      

  ### Attach API Key to Usage Plan ###
  MyUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref MyApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref MyUsagePlan

Outputs:
  GetReqURL:
    Description: "GET Request URL"
    Value: !Sub "curl -X GET -H 'x-api-key:<---TOKEN--->' https://${VpcApi}.execute-api.${AWS::Region}.amazonaws.com/prod/vpc?vpc_id=<---CREATED_VPC_ID--->"
  PostReqURL:
    Description: "POST Request URL"
    Value: !Sub |
      curl -X POST -H "x-api-key:<---TOKEN--->" https://${VpcApi}.execute-api.${AWS::Region}.amazonaws.com/prod/vpc -d '{"cidr_block": "10.1.0.0/16", "subnet_cidrs": ["10.1.1.0/24","10.1.2.0/24"]}'
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${VpcApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  ApiKey:
    Description: "API Key for accessing the API"
    Value: !Ref MyApiKey
